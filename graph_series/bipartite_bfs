bool is_bipartite_bfs_util(int temp,vector<int> adjL[],vector<int> &col){
    queue<int> q;
    q.push(temp);
    col[temp]=0;
    while(!q.empty()){
        int node=q.front();
        q.pop();
        for(auto it:adjL[node]){
            if(col[it]==-1){
                q.push(it);
                col[it]=(col[node]==0?1:0);
            }
            else{
                if(col[it]==col[node]) return false;
            }
        }
    }
    return true;
}

bool is_bipartite_bfs(int v,vector<int> adjL[]){
    vector<int> col(v+1,-1);
    for(int i=1;i<v+1;i++){
        if(col[i]==-1){
            if(!is_bipartite_bfs_util(i,adjL,col)) return false;    
        }
    }
    return true;
}
